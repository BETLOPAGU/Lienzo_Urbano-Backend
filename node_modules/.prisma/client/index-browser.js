
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.6.1
 * Query Engine version: 694eea289a8462c80264df36757e4fdc129b1b32
 */
Prisma.prismaVersion = {
  client: "4.6.1",
  engine: "694eea289a8462c80264df36757e4fdc129b1b32"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.ArtworkCollectionsScalarFieldEnum = makeEnum({
  id: 'id',
  collectionId: 'collectionId',
  artworkId: 'artworkId'
});

exports.Prisma.ArtworksAddressesScalarFieldEnum = makeEnum({
  id: 'id',
  artworkId: 'artworkId',
  address: 'address'
});

exports.Prisma.ArtworksCollaboratorsScalarFieldEnum = makeEnum({
  id: 'id',
  artistId: 'artistId',
  artworkId: 'artworkId'
});

exports.Prisma.ArtworksColorsScalarFieldEnum = makeEnum({
  id: 'id',
  artworkId: 'artworkId',
  color: 'color'
});

exports.Prisma.ArtworksMaterialsScalarFieldEnum = makeEnum({
  id: 'id',
  artworkId: 'artworkId',
  material: 'material'
});

exports.Prisma.ArtworksMovementsScalarFieldEnum = makeEnum({
  id: 'id',
  artworkId: 'artworkId',
  movement: 'movement'
});

exports.Prisma.ArtworksScalarFieldEnum = makeEnum({
  id: 'id',
  artistId: 'artistId',
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl',
  minWorkingHours: 'minWorkingHours',
  maxWorkingHours: 'maxWorkingHours',
  minPrice: 'minPrice',
  maxPrice: 'maxPrice',
  minHeight: 'minHeight',
  maxHeight: 'maxHeight',
  minWidth: 'minWidth',
  maxWidth: 'maxWidth',
  createdDate: 'createdDate',
  deletedDate: 'deletedDate',
  isDeleted: 'isDeleted'
});

exports.Prisma.ArtworksTagsScalarFieldEnum = makeEnum({
  id: 'id',
  artworkId: 'artworkId',
  tag: 'tag'
});

exports.Prisma.CollectionsScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  name: 'name',
  imageUrl: 'imageUrl',
  createdDate: 'createdDate'
});

exports.Prisma.CommentsLikesScalarFieldEnum = makeEnum({
  id: 'id',
  commentId: 'commentId',
  userId: 'userId',
  positive: 'positive'
});

exports.Prisma.CommentsScalarFieldEnum = makeEnum({
  id: 'id',
  commentatorId: 'commentatorId',
  comment: 'comment',
  userId: 'userId',
  artworkId: 'artworkId',
  commentId: 'commentId',
  createdDate: 'createdDate'
});

exports.Prisma.EventsScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  artworkId: 'artworkId',
  typeId: 'typeId',
  createdDate: 'createdDate'
});

exports.Prisma.FavoritesArtworksScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  artworkId: 'artworkId',
  createdDate: 'createdDate'
});

exports.Prisma.FollowersScalarFieldEnum = makeEnum({
  id: 'id',
  followerId: 'followerId',
  userId: 'userId',
  createdDate: 'createdDate'
});

exports.Prisma.NotificationsScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  typeId: 'typeId',
  title: 'title',
  content: 'content',
  link: 'link',
  createdDate: 'createdDate',
  viewed: 'viewed'
});

exports.Prisma.ReportsScalarFieldEnum = makeEnum({
  id: 'id',
  reporterId: 'reporterId',
  description: 'description',
  userId: 'userId',
  artworkId: 'artworkId',
  commentId: 'commentId',
  createdDate: 'createdDate'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersRatingsScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  qualifierId: 'qualifierId',
  rating: 'rating'
});

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  id: 'id',
  typeId: 'typeId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  pass: 'pass',
  phone: 'phone',
  gender: 'gender',
  birthdate: 'birthdate',
  address: 'address',
  contact: 'contact',
  photoUrl: 'photoUrl',
  googleUid: 'googleUid',
  facebookUid: 'facebookUid',
  firebaseToken: 'firebaseToken',
  createdDate: 'createdDate',
  deletedDate: 'deletedDate',
  isDeleted: 'isDeleted'
});


exports.Prisma.ModelName = makeEnum({
  users: 'users',
  artworks: 'artworks',
  comments: 'comments',
  favoritesArtworks: 'favoritesArtworks',
  followers: 'followers',
  collections: 'collections',
  commentsLikes: 'commentsLikes',
  artworksAddresses: 'artworksAddresses',
  artworksCollaborators: 'artworksCollaborators',
  artworksColors: 'artworksColors',
  artworksMaterials: 'artworksMaterials',
  artworksMovements: 'artworksMovements',
  artworksTags: 'artworksTags',
  notifications: 'notifications',
  usersRatings: 'usersRatings',
  artworkCollections: 'artworkCollections',
  reports: 'reports',
  events: 'events'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
