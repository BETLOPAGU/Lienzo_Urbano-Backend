"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByFollowersArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const FollowersOrderByWithAggregationInput_1 = require("../../../inputs/FollowersOrderByWithAggregationInput");
const FollowersScalarWhereWithAggregatesInput_1 = require("../../../inputs/FollowersScalarWhereWithAggregatesInput");
const FollowersWhereInput_1 = require("../../../inputs/FollowersWhereInput");
const FollowersScalarFieldEnum_1 = require("../../../../enums/FollowersScalarFieldEnum");
let GroupByFollowersArgs = class GroupByFollowersArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersWhereInput_1.FollowersWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersWhereInput_1.FollowersWhereInput)
], GroupByFollowersArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [FollowersOrderByWithAggregationInput_1.FollowersOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByFollowersArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [FollowersScalarFieldEnum_1.FollowersScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByFollowersArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersScalarWhereWithAggregatesInput_1.FollowersScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersScalarWhereWithAggregatesInput_1.FollowersScalarWhereWithAggregatesInput)
], GroupByFollowersArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByFollowersArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByFollowersArgs.prototype, "skip", void 0);
GroupByFollowersArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByFollowersArgs);
exports.GroupByFollowersArgs = GroupByFollowersArgs;
