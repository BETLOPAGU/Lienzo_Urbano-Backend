"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateFollowersResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const graphql_fields_1 = tslib_1.__importDefault(require("graphql-fields"));
const AggregateFollowersArgs_1 = require("./args/AggregateFollowersArgs");
const Followers_1 = require("../../../models/Followers");
const AggregateFollowers_1 = require("../../outputs/AggregateFollowers");
const helpers_1 = require("../../../helpers");
let AggregateFollowersResolver = class AggregateFollowersResolver {
    async aggregateFollowers(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).followers.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateFollowers_1.AggregateFollowers, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateFollowersArgs_1.AggregateFollowersArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateFollowersResolver.prototype, "aggregateFollowers", null);
AggregateFollowersResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Followers_1.Followers)
], AggregateFollowersResolver);
exports.AggregateFollowersResolver = AggregateFollowersResolver;
