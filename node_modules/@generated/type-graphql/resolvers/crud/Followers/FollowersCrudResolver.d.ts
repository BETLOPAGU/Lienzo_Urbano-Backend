import { GraphQLResolveInfo } from "graphql";
import { AggregateFollowersArgs } from "./args/AggregateFollowersArgs";
import { CreateFollowersArgs } from "./args/CreateFollowersArgs";
import { CreateManyFollowersArgs } from "./args/CreateManyFollowersArgs";
import { DeleteFollowersArgs } from "./args/DeleteFollowersArgs";
import { DeleteManyFollowersArgs } from "./args/DeleteManyFollowersArgs";
import { FindFirstFollowersArgs } from "./args/FindFirstFollowersArgs";
import { FindManyFollowersArgs } from "./args/FindManyFollowersArgs";
import { FindUniqueFollowersArgs } from "./args/FindUniqueFollowersArgs";
import { GroupByFollowersArgs } from "./args/GroupByFollowersArgs";
import { UpdateFollowersArgs } from "./args/UpdateFollowersArgs";
import { UpdateManyFollowersArgs } from "./args/UpdateManyFollowersArgs";
import { UpsertFollowersArgs } from "./args/UpsertFollowersArgs";
import { Followers } from "../../../models/Followers";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateFollowers } from "../../outputs/AggregateFollowers";
import { FollowersGroupBy } from "../../outputs/FollowersGroupBy";
export declare class FollowersCrudResolver {
    findUniqueFollowers(ctx: any, info: GraphQLResolveInfo, args: FindUniqueFollowersArgs): Promise<Followers | null>;
    findFirstFollowers(ctx: any, info: GraphQLResolveInfo, args: FindFirstFollowersArgs): Promise<Followers | null>;
    findManyFollowers(ctx: any, info: GraphQLResolveInfo, args: FindManyFollowersArgs): Promise<Followers[]>;
    createFollowers(ctx: any, info: GraphQLResolveInfo, args: CreateFollowersArgs): Promise<Followers>;
    createManyFollowers(ctx: any, info: GraphQLResolveInfo, args: CreateManyFollowersArgs): Promise<AffectedRowsOutput>;
    deleteFollowers(ctx: any, info: GraphQLResolveInfo, args: DeleteFollowersArgs): Promise<Followers | null>;
    updateFollowers(ctx: any, info: GraphQLResolveInfo, args: UpdateFollowersArgs): Promise<Followers | null>;
    deleteManyFollowers(ctx: any, info: GraphQLResolveInfo, args: DeleteManyFollowersArgs): Promise<AffectedRowsOutput>;
    updateManyFollowers(ctx: any, info: GraphQLResolveInfo, args: UpdateManyFollowersArgs): Promise<AffectedRowsOutput>;
    upsertFollowers(ctx: any, info: GraphQLResolveInfo, args: UpsertFollowersArgs): Promise<Followers>;
    aggregateFollowers(ctx: any, info: GraphQLResolveInfo, args: AggregateFollowersArgs): Promise<AggregateFollowers>;
    groupByFollowers(ctx: any, info: GraphQLResolveInfo, args: GroupByFollowersArgs): Promise<FollowersGroupBy[]>;
}
