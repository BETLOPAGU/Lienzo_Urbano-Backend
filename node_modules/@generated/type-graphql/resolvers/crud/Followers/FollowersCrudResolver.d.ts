import { GraphQLResolveInfo } from "graphql";
import { AggregateFollowersArgs } from "./args/AggregateFollowersArgs";
import { CreateManyFollowersArgs } from "./args/CreateManyFollowersArgs";
import { CreateOneFollowersArgs } from "./args/CreateOneFollowersArgs";
import { DeleteManyFollowersArgs } from "./args/DeleteManyFollowersArgs";
import { DeleteOneFollowersArgs } from "./args/DeleteOneFollowersArgs";
import { FindFirstFollowersArgs } from "./args/FindFirstFollowersArgs";
import { FindFirstFollowersOrThrowArgs } from "./args/FindFirstFollowersOrThrowArgs";
import { FindManyFollowersArgs } from "./args/FindManyFollowersArgs";
import { FindUniqueFollowersArgs } from "./args/FindUniqueFollowersArgs";
import { FindUniqueFollowersOrThrowArgs } from "./args/FindUniqueFollowersOrThrowArgs";
import { GroupByFollowersArgs } from "./args/GroupByFollowersArgs";
import { UpdateManyFollowersArgs } from "./args/UpdateManyFollowersArgs";
import { UpdateOneFollowersArgs } from "./args/UpdateOneFollowersArgs";
import { UpsertOneFollowersArgs } from "./args/UpsertOneFollowersArgs";
import { Followers } from "../../../models/Followers";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateFollowers } from "../../outputs/AggregateFollowers";
import { FollowersGroupBy } from "../../outputs/FollowersGroupBy";
export declare class FollowersCrudResolver {
    aggregateFollowers(ctx: any, info: GraphQLResolveInfo, args: AggregateFollowersArgs): Promise<AggregateFollowers>;
    createManyFollowers(ctx: any, info: GraphQLResolveInfo, args: CreateManyFollowersArgs): Promise<AffectedRowsOutput>;
    createOneFollowers(ctx: any, info: GraphQLResolveInfo, args: CreateOneFollowersArgs): Promise<Followers>;
    deleteManyFollowers(ctx: any, info: GraphQLResolveInfo, args: DeleteManyFollowersArgs): Promise<AffectedRowsOutput>;
    deleteOneFollowers(ctx: any, info: GraphQLResolveInfo, args: DeleteOneFollowersArgs): Promise<Followers | null>;
    findFirstFollowers(ctx: any, info: GraphQLResolveInfo, args: FindFirstFollowersArgs): Promise<Followers | null>;
    findFirstFollowersOrThrow(ctx: any, info: GraphQLResolveInfo, args: FindFirstFollowersOrThrowArgs): Promise<Followers | null>;
    findManyFollowers(ctx: any, info: GraphQLResolveInfo, args: FindManyFollowersArgs): Promise<Followers[]>;
    findUniqueFollowers(ctx: any, info: GraphQLResolveInfo, args: FindUniqueFollowersArgs): Promise<Followers | null>;
    findUniqueFollowersOrThrow(ctx: any, info: GraphQLResolveInfo, args: FindUniqueFollowersOrThrowArgs): Promise<Followers | null>;
    groupByFollowers(ctx: any, info: GraphQLResolveInfo, args: GroupByFollowersArgs): Promise<FollowersGroupBy[]>;
    updateManyFollowers(ctx: any, info: GraphQLResolveInfo, args: UpdateManyFollowersArgs): Promise<AffectedRowsOutput>;
    updateOneFollowers(ctx: any, info: GraphQLResolveInfo, args: UpdateOneFollowersArgs): Promise<Followers | null>;
    upsertOneFollowers(ctx: any, info: GraphQLResolveInfo, args: UpsertOneFollowersArgs): Promise<Followers>;
}
