"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByArtworksArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ArtworksOrderByWithAggregationInput_1 = require("../../../inputs/ArtworksOrderByWithAggregationInput");
const ArtworksScalarWhereWithAggregatesInput_1 = require("../../../inputs/ArtworksScalarWhereWithAggregatesInput");
const ArtworksWhereInput_1 = require("../../../inputs/ArtworksWhereInput");
const ArtworksScalarFieldEnum_1 = require("../../../../enums/ArtworksScalarFieldEnum");
let GroupByArtworksArgs = class GroupByArtworksArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ArtworksWhereInput_1.ArtworksWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ArtworksWhereInput_1.ArtworksWhereInput)
], GroupByArtworksArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ArtworksOrderByWithAggregationInput_1.ArtworksOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByArtworksArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [ArtworksScalarFieldEnum_1.ArtworksScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByArtworksArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ArtworksScalarWhereWithAggregatesInput_1.ArtworksScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ArtworksScalarWhereWithAggregatesInput_1.ArtworksScalarWhereWithAggregatesInput)
], GroupByArtworksArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByArtworksArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByArtworksArgs.prototype, "skip", void 0);
GroupByArtworksArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByArtworksArgs);
exports.GroupByArtworksArgs = GroupByArtworksArgs;
