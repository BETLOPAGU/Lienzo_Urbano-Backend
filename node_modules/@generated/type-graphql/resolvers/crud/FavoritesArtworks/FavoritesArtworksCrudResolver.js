"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FavoritesArtworksCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const graphql_fields_1 = tslib_1.__importDefault(require("graphql-fields"));
const AggregateFavoritesArtworksArgs_1 = require("./args/AggregateFavoritesArtworksArgs");
const CreateManyFavoritesArtworksArgs_1 = require("./args/CreateManyFavoritesArtworksArgs");
const CreateOneFavoritesArtworksArgs_1 = require("./args/CreateOneFavoritesArtworksArgs");
const DeleteManyFavoritesArtworksArgs_1 = require("./args/DeleteManyFavoritesArtworksArgs");
const DeleteOneFavoritesArtworksArgs_1 = require("./args/DeleteOneFavoritesArtworksArgs");
const FindFirstFavoritesArtworksArgs_1 = require("./args/FindFirstFavoritesArtworksArgs");
const FindFirstFavoritesArtworksOrThrowArgs_1 = require("./args/FindFirstFavoritesArtworksOrThrowArgs");
const FindManyFavoritesArtworksArgs_1 = require("./args/FindManyFavoritesArtworksArgs");
const FindUniqueFavoritesArtworksArgs_1 = require("./args/FindUniqueFavoritesArtworksArgs");
const FindUniqueFavoritesArtworksOrThrowArgs_1 = require("./args/FindUniqueFavoritesArtworksOrThrowArgs");
const GroupByFavoritesArtworksArgs_1 = require("./args/GroupByFavoritesArtworksArgs");
const UpdateManyFavoritesArtworksArgs_1 = require("./args/UpdateManyFavoritesArtworksArgs");
const UpdateOneFavoritesArtworksArgs_1 = require("./args/UpdateOneFavoritesArtworksArgs");
const UpsertOneFavoritesArtworksArgs_1 = require("./args/UpsertOneFavoritesArtworksArgs");
const helpers_1 = require("../../../helpers");
const FavoritesArtworks_1 = require("../../../models/FavoritesArtworks");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateFavoritesArtworks_1 = require("../../outputs/AggregateFavoritesArtworks");
const FavoritesArtworksGroupBy_1 = require("../../outputs/FavoritesArtworksGroupBy");
let FavoritesArtworksCrudResolver = class FavoritesArtworksCrudResolver {
    async aggregateFavoritesArtworks(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
    async createManyFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createOneFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteOneFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstFavoritesArtworksOrThrow(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.findFirstOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findManyFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findUniqueFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findUniqueFavoritesArtworksOrThrow(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.findUniqueOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async groupByFavoritesArtworks(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
    async updateManyFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateOneFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertOneFavoritesArtworks(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).favoritesArtworks.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateFavoritesArtworks_1.AggregateFavoritesArtworks, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateFavoritesArtworksArgs_1.AggregateFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "aggregateFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, CreateManyFavoritesArtworksArgs_1.CreateManyFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "createManyFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, CreateOneFavoritesArtworksArgs_1.CreateOneFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "createOneFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, DeleteManyFavoritesArtworksArgs_1.DeleteManyFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "deleteManyFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, DeleteOneFavoritesArtworksArgs_1.DeleteOneFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "deleteOneFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstFavoritesArtworksArgs_1.FindFirstFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "findFirstFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstFavoritesArtworksOrThrowArgs_1.FindFirstFavoritesArtworksOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "findFirstFavoritesArtworksOrThrow", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => [FavoritesArtworks_1.FavoritesArtworks], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindManyFavoritesArtworksArgs_1.FindManyFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "findManyFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindUniqueFavoritesArtworksArgs_1.FindUniqueFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "findUniqueFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindUniqueFavoritesArtworksOrThrowArgs_1.FindUniqueFavoritesArtworksOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "findUniqueFavoritesArtworksOrThrow", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => [FavoritesArtworksGroupBy_1.FavoritesArtworksGroupBy], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, GroupByFavoritesArtworksArgs_1.GroupByFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "groupByFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpdateManyFavoritesArtworksArgs_1.UpdateManyFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "updateManyFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpdateOneFavoritesArtworksArgs_1.UpdateOneFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "updateOneFavoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => FavoritesArtworks_1.FavoritesArtworks, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpsertOneFavoritesArtworksArgs_1.UpsertOneFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FavoritesArtworksCrudResolver.prototype, "upsertOneFavoritesArtworks", null);
FavoritesArtworksCrudResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => FavoritesArtworks_1.FavoritesArtworks)
], FavoritesArtworksCrudResolver);
exports.FavoritesArtworksCrudResolver = FavoritesArtworksCrudResolver;
