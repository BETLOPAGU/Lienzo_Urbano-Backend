"use strict";
var CommentsWhereInput_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommentsWhereInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ArtworksRelationFilter_1 = require("../inputs/ArtworksRelationFilter");
const CommentsLikesListRelationFilter_1 = require("../inputs/CommentsLikesListRelationFilter");
const CommentsListRelationFilter_1 = require("../inputs/CommentsListRelationFilter");
const CommentsRelationFilter_1 = require("../inputs/CommentsRelationFilter");
const DateTimeNullableFilter_1 = require("../inputs/DateTimeNullableFilter");
const IntFilter_1 = require("../inputs/IntFilter");
const IntNullableFilter_1 = require("../inputs/IntNullableFilter");
const ReportsListRelationFilter_1 = require("../inputs/ReportsListRelationFilter");
const StringFilter_1 = require("../inputs/StringFilter");
const UsersRelationFilter_1 = require("../inputs/UsersRelationFilter");
let CommentsWhereInput = CommentsWhereInput_1 = class CommentsWhereInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CommentsWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CommentsWhereInput.prototype, "AND", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CommentsWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CommentsWhereInput.prototype, "OR", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [CommentsWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], CommentsWhereInput.prototype, "NOT", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntFilter_1.IntFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntFilter_1.IntFilter)
], CommentsWhereInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntFilter_1.IntFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntFilter_1.IntFilter)
], CommentsWhereInput.prototype, "commentatorId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], CommentsWhereInput.prototype, "comment", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntNullableFilter_1.IntNullableFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntNullableFilter_1.IntNullableFilter)
], CommentsWhereInput.prototype, "userId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntNullableFilter_1.IntNullableFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntNullableFilter_1.IntNullableFilter)
], CommentsWhereInput.prototype, "artworkId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntNullableFilter_1.IntNullableFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntNullableFilter_1.IntNullableFilter)
], CommentsWhereInput.prototype, "commentId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => DateTimeNullableFilter_1.DateTimeNullableFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", DateTimeNullableFilter_1.DateTimeNullableFilter)
], CommentsWhereInput.prototype, "createdDate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => UsersRelationFilter_1.UsersRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", UsersRelationFilter_1.UsersRelationFilter)
], CommentsWhereInput.prototype, "users_comments_commentatorIdTousers", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => UsersRelationFilter_1.UsersRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", UsersRelationFilter_1.UsersRelationFilter)
], CommentsWhereInput.prototype, "users_commentsTousers", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ArtworksRelationFilter_1.ArtworksRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ArtworksRelationFilter_1.ArtworksRelationFilter)
], CommentsWhereInput.prototype, "artworks", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CommentsRelationFilter_1.CommentsRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CommentsRelationFilter_1.CommentsRelationFilter)
], CommentsWhereInput.prototype, "comments", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CommentsListRelationFilter_1.CommentsListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CommentsListRelationFilter_1.CommentsListRelationFilter)
], CommentsWhereInput.prototype, "other_comments", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => CommentsLikesListRelationFilter_1.CommentsLikesListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", CommentsLikesListRelationFilter_1.CommentsLikesListRelationFilter)
], CommentsWhereInput.prototype, "commentsLikes", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => ReportsListRelationFilter_1.ReportsListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", ReportsListRelationFilter_1.ReportsListRelationFilter)
], CommentsWhereInput.prototype, "reports", void 0);
CommentsWhereInput = CommentsWhereInput_1 = tslib_1.__decorate([
    TypeGraphQL.InputType("CommentsWhereInput", {
        isAbstract: true
    })
], CommentsWhereInput);
exports.CommentsWhereInput = CommentsWhereInput;
