"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const FavoritesArtworksCreateWithoutArtworksInput_1 = require("../inputs/FavoritesArtworksCreateWithoutArtworksInput");
const FavoritesArtworksUpdateWithoutArtworksInput_1 = require("../inputs/FavoritesArtworksUpdateWithoutArtworksInput");
const FavoritesArtworksWhereUniqueInput_1 = require("../inputs/FavoritesArtworksWhereUniqueInput");
let FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput = class FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FavoritesArtworksWhereUniqueInput_1.FavoritesArtworksWhereUniqueInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", FavoritesArtworksWhereUniqueInput_1.FavoritesArtworksWhereUniqueInput)
], FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FavoritesArtworksUpdateWithoutArtworksInput_1.FavoritesArtworksUpdateWithoutArtworksInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", FavoritesArtworksUpdateWithoutArtworksInput_1.FavoritesArtworksUpdateWithoutArtworksInput)
], FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FavoritesArtworksCreateWithoutArtworksInput_1.FavoritesArtworksCreateWithoutArtworksInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", FavoritesArtworksCreateWithoutArtworksInput_1.FavoritesArtworksCreateWithoutArtworksInput)
], FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput.prototype, "create", void 0);
FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput = tslib_1.__decorate([
    TypeGraphQL.InputType("FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput", {
        isAbstract: true
    })
], FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput);
exports.FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput = FavoritesArtworksUpsertWithWhereUniqueWithoutArtworksInput;
