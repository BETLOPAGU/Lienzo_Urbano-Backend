"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsersRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const Artworks_1 = require("../../../models/Artworks");
const Comments_1 = require("../../../models/Comments");
const FavoritesArtworks_1 = require("../../../models/FavoritesArtworks");
const Followers_1 = require("../../../models/Followers");
const Users_1 = require("../../../models/Users");
const UsersArtworksArgs_1 = require("./args/UsersArtworksArgs");
const UsersCommentsArgs_1 = require("./args/UsersCommentsArgs");
const UsersFavoritesArtworksArgs_1 = require("./args/UsersFavoritesArtworksArgs");
const UsersFollowers_followers_artistIdTousersArgs_1 = require("./args/UsersFollowers_followers_artistIdTousersArgs");
const UsersFollowers_followers_userIdTousersArgs_1 = require("./args/UsersFollowers_followers_userIdTousersArgs");
const helpers_1 = require("../../../helpers");
let UsersRelationsResolver = class UsersRelationsResolver {
    async artworks(users, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).users.findUnique({
            where: {
                id: users.id,
            },
        }).artworks(args);
    }
    async comments(users, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).users.findUnique({
            where: {
                id: users.id,
            },
        }).comments(args);
    }
    async favoritesArtworks(users, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).users.findUnique({
            where: {
                id: users.id,
            },
        }).favoritesArtworks(args);
    }
    async followers_followers_artistIdTousers(users, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).users.findUnique({
            where: {
                id: users.id,
            },
        }).followers_followers_artistIdTousers(args);
    }
    async followers_followers_userIdTousers(users, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).users.findUnique({
            where: {
                id: users.id,
            },
        }).followers_followers_userIdTousers(args);
    }
};
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Artworks_1.Artworks], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Users_1.Users, Object, UsersArtworksArgs_1.UsersArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], UsersRelationsResolver.prototype, "artworks", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Comments_1.Comments], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Users_1.Users, Object, UsersCommentsArgs_1.UsersCommentsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], UsersRelationsResolver.prototype, "comments", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [FavoritesArtworks_1.FavoritesArtworks], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Users_1.Users, Object, UsersFavoritesArtworksArgs_1.UsersFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], UsersRelationsResolver.prototype, "favoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Followers_1.Followers], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Users_1.Users, Object, UsersFollowers_followers_artistIdTousersArgs_1.UsersFollowers_followers_artistIdTousersArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], UsersRelationsResolver.prototype, "followers_followers_artistIdTousers", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Followers_1.Followers], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Users_1.Users, Object, UsersFollowers_followers_userIdTousersArgs_1.UsersFollowers_followers_userIdTousersArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], UsersRelationsResolver.prototype, "followers_followers_userIdTousers", null);
UsersRelationsResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Users_1.Users)
], UsersRelationsResolver);
exports.UsersRelationsResolver = UsersRelationsResolver;
