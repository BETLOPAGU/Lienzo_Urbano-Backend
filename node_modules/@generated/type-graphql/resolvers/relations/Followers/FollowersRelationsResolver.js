"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FollowersRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const Followers_1 = require("../../../models/Followers");
const Users_1 = require("../../../models/Users");
const helpers_1 = require("../../../helpers");
let FollowersRelationsResolver = class FollowersRelationsResolver {
    async users(followers, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).followers.findUnique({
            where: {
                id: followers.id,
            },
        }).users({});
    }
    async users_followers_userIdTousers(followers, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).followers.findUnique({
            where: {
                id: followers.id,
            },
        }).users_followers_userIdTousers({});
    }
};
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => Users_1.Users, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Followers_1.Followers, Object]),
    tslib_1.__metadata("design:returntype", Promise)
], FollowersRelationsResolver.prototype, "users", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => Users_1.Users, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Followers_1.Followers, Object]),
    tslib_1.__metadata("design:returntype", Promise)
], FollowersRelationsResolver.prototype, "users_followers_userIdTousers", null);
FollowersRelationsResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Followers_1.Followers)
], FollowersRelationsResolver);
exports.FollowersRelationsResolver = FollowersRelationsResolver;
