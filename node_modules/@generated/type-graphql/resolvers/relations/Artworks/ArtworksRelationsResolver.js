"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArtworksRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const ArtworkCollections_1 = require("../../../models/ArtworkCollections");
const Artworks_1 = require("../../../models/Artworks");
const ArtworksAddresses_1 = require("../../../models/ArtworksAddresses");
const ArtworksCollaborators_1 = require("../../../models/ArtworksCollaborators");
const ArtworksColors_1 = require("../../../models/ArtworksColors");
const ArtworksMaterials_1 = require("../../../models/ArtworksMaterials");
const ArtworksMovements_1 = require("../../../models/ArtworksMovements");
const ArtworksTags_1 = require("../../../models/ArtworksTags");
const Comments_1 = require("../../../models/Comments");
const FavoritesArtworks_1 = require("../../../models/FavoritesArtworks");
const Reports_1 = require("../../../models/Reports");
const Users_1 = require("../../../models/Users");
const ArtworksArtworkCollectionsArgs_1 = require("./args/ArtworksArtworkCollectionsArgs");
const ArtworksArtworksAddressesArgs_1 = require("./args/ArtworksArtworksAddressesArgs");
const ArtworksArtworksCollaboratorsArgs_1 = require("./args/ArtworksArtworksCollaboratorsArgs");
const ArtworksArtworksColorsArgs_1 = require("./args/ArtworksArtworksColorsArgs");
const ArtworksArtworksMaterialsArgs_1 = require("./args/ArtworksArtworksMaterialsArgs");
const ArtworksArtworksMovementsArgs_1 = require("./args/ArtworksArtworksMovementsArgs");
const ArtworksArtworksTagsArgs_1 = require("./args/ArtworksArtworksTagsArgs");
const ArtworksCommentsArgs_1 = require("./args/ArtworksCommentsArgs");
const ArtworksFavoritesArtworksArgs_1 = require("./args/ArtworksFavoritesArtworksArgs");
const ArtworksReportsArgs_1 = require("./args/ArtworksReportsArgs");
const helpers_1 = require("../../../helpers");
let ArtworksRelationsResolver = class ArtworksRelationsResolver {
    async users(artworks, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).users({});
    }
    async artworkCollections(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworkCollections(args);
    }
    async artworksAddresses(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksAddresses(args);
    }
    async artworksCollaborators(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksCollaborators(args);
    }
    async artworksColors(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksColors(args);
    }
    async artworksMaterials(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksMaterials(args);
    }
    async artworksMovements(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksMovements(args);
    }
    async artworksTags(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).artworksTags(args);
    }
    async comments(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).comments(args);
    }
    async favoritesArtworks(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).favoritesArtworks(args);
    }
    async reports(artworks, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).artworks.findUnique({
            where: {
                id: artworks.id,
            },
        }).reports(args);
    }
};
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => Users_1.Users, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "users", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworkCollections_1.ArtworkCollections], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworkCollectionsArgs_1.ArtworksArtworkCollectionsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworkCollections", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksAddresses_1.ArtworksAddresses], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksAddressesArgs_1.ArtworksArtworksAddressesArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksAddresses", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksCollaborators_1.ArtworksCollaborators], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksCollaboratorsArgs_1.ArtworksArtworksCollaboratorsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksCollaborators", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksColors_1.ArtworksColors], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksColorsArgs_1.ArtworksArtworksColorsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksColors", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksMaterials_1.ArtworksMaterials], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksMaterialsArgs_1.ArtworksArtworksMaterialsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksMaterials", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksMovements_1.ArtworksMovements], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksMovementsArgs_1.ArtworksArtworksMovementsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksMovements", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [ArtworksTags_1.ArtworksTags], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksArtworksTagsArgs_1.ArtworksArtworksTagsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "artworksTags", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Comments_1.Comments], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksCommentsArgs_1.ArtworksCommentsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "comments", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [FavoritesArtworks_1.FavoritesArtworks], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksFavoritesArtworksArgs_1.ArtworksFavoritesArtworksArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "favoritesArtworks", null);
tslib_1.__decorate([
    TypeGraphQL.FieldResolver(_type => [Reports_1.Reports], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Root()),
    tslib_1.__param(1, TypeGraphQL.Ctx()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Artworks_1.Artworks, Object, ArtworksReportsArgs_1.ArtworksReportsArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], ArtworksRelationsResolver.prototype, "reports", null);
ArtworksRelationsResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Artworks_1.Artworks)
], ArtworksRelationsResolver);
exports.ArtworksRelationsResolver = ArtworksRelationsResolver;
