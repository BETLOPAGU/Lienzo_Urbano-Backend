"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FollowersGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const FollowersAvgAggregate_1 = require("../outputs/FollowersAvgAggregate");
const FollowersCountAggregate_1 = require("../outputs/FollowersCountAggregate");
const FollowersMaxAggregate_1 = require("../outputs/FollowersMaxAggregate");
const FollowersMinAggregate_1 = require("../outputs/FollowersMinAggregate");
const FollowersSumAggregate_1 = require("../outputs/FollowersSumAggregate");
let FollowersGroupBy = class FollowersGroupBy {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], FollowersGroupBy.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], FollowersGroupBy.prototype, "followerId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], FollowersGroupBy.prototype, "userId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => Date, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Date)
], FollowersGroupBy.prototype, "createdDate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersCountAggregate_1.FollowersCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersCountAggregate_1.FollowersCountAggregate)
], FollowersGroupBy.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersAvgAggregate_1.FollowersAvgAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersAvgAggregate_1.FollowersAvgAggregate)
], FollowersGroupBy.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersSumAggregate_1.FollowersSumAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersSumAggregate_1.FollowersSumAggregate)
], FollowersGroupBy.prototype, "_sum", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersMinAggregate_1.FollowersMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersMinAggregate_1.FollowersMinAggregate)
], FollowersGroupBy.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => FollowersMaxAggregate_1.FollowersMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", FollowersMaxAggregate_1.FollowersMaxAggregate)
], FollowersGroupBy.prototype, "_max", void 0);
FollowersGroupBy = tslib_1.__decorate([
    TypeGraphQL.ObjectType("FollowersGroupBy", {
        isAbstract: true
    })
], FollowersGroupBy);
exports.FollowersGroupBy = FollowersGroupBy;
